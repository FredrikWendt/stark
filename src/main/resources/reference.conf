server {
  # Default interface
  default-interface = "127.0.0.1"
}

api {
  # Enable/disable the proxies API.
  # Exposes all proxy configurations and allow adding and deleting configurations.
  proxies = on

  # Enable/disable the sessions API.
  # Exposes all sessions with the session token and information about the user.
  # A session can be deleted which forces the user to authenticate again no the next request.
  # Since the session token is exposed it is easy for a user to pretend to be someone else!
  sessions = off

  # Enable/disable the headers API.
  # Exposes all header tokens and allows adding and deleting tokens.
  headers = on
}

auth {
  # Name of the authentication provider to use.
  # Avaliable providers are: google
  provider = "google"

  # Name of the header used for authentication.
  header-name = "StarkAuth"

  # Name of the cookie used to store the users session.
  cookie-name = "StarkProxy"

  # How long the users session should be valid.
  # When the time have elapsed the user needs to re-authenticate.
  session-expiration = 30 days

  set-cookie-path = "/stark-proxy/set-cookie"
  cookie-parameter = "cookie"
  source-uri-parameter = "source"

  # If the auth cookie should be set as ".domain.tld".
  # Is useful when serving multiple proxies on subdomains for the same domain.
  # Example: URI "service1.example.com" will set cookie domain to ".example.com", which can then be used to access "service2.example.com".
  wildcard-cookie-domain = false
}

auth.google {
  # Name of the cookie used to hold the encryption key to the state.
  state-cookie-name = "GoogleState"
}

redis {
  host = "localhost"
  port = 6379
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = DEBUG
}

spray.can.server.server-header = "Stark proxy"
