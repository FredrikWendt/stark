server = {
    # Domain to access the proxy API
    apiHost = "api.example.com"

    # List of bindings
    # A binding needs a interface IP to bind to and a TCP port.
    bindings = [
        {
            # Interface to bind to.
            # If not sed the key server.interface is used instead.
            interface = "0.0.0.0"

            # Port to listen on.
            port = 8080

            # Enables/disables ssl encryption for this binding, default is disabled.
            # Keys cert-file and private-key-file must be set if this is enabled.
            ssl = on

            # Certification file.
            # X.509 certificate.
            cert-file = "domain.crt"

            # Private key file to the certificate in the cert-file key.
            # Should be on DER format.
            private-key-file = "domain.key"
        }
    ]
}

auth = {
    # Name of the auth cookie.
    cookieName = "LOGINPROXY"

    # Callback URL for OAuth
    callbackUrl = "http://login.example.com/callback"

    # URL used to check if the auth cookie exists.
    checkUrl = "http://login.example.com/check"

    # Path that will be used to set cookie on domains
    setCookiePath = "/login-proxy/set-cookie"

    # Regexp that should match email addresses that should be authorized, if left out all authentications are authorized.
    # Don't forget consider if you need to set start of line (^) and/or end of line ($) anchors.
    authorizedEmailPattern = "@example.com$"
}

auth.google = {
    # Client id
    clientId = "xyz"

    # Client secret
    clientSecret = "xyz"

    # Name of the state cookie
    stateCookieName = "GoogleState"
}
